app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: My Company

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7008
  listen:
    port: 7008
    # port: 80
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    # client: better-sqlite3
    # connection: ':memory:'

    client: pg
    connection:
      host: localhost
      port: 5432
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: ${GITHUB_PAT_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  environment: development
  providers:
    github:
      development:
        clientId: ${GITHUB_AUTH_CLIENT}
        clientSecret: ${GITHUB_AUTH_SECRET}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, User, Group]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml

    # Local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
#     #     - allow: [User, Group]
kubernetes:
  serviceLocatorMethod:
    type: 'singleTenant'
  clusterLocatorMethods:
    - type: 'localKubectlProxy'
      clusters:
        - url: https://127.0.0.1:60722
          name: kind-cluster-1
          authProvider: 'serviceAccount'
          skipTLSVerify: false
          skipMetricsLookup: true
          serviceAccountToken: eyJhbGciOiJSUzI1NiIsImtpZCI6IkZ6WGdwR3FfdjZkN1ZzNFZsWE5YYjFGLVBqRVh3U3VSY0FDYVcxc3d5RFUifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNzA0NTIzMjE3LCJpYXQiOjE3MDQ1MTk2MTcsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJjZXJ0aWZpY2F0ZS1jb250cm9sbGVyIiwidWlkIjoiYzhlMTY2Y2UtYTM5YS00NWRlLThjNDYtODdkZDM1MWRlMWQxIn19LCJuYmYiOjE3MDQ1MTk2MTcsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTpjZXJ0aWZpY2F0ZS1jb250cm9sbGVyIn0.hgb0Afn68SJJQ4iPCDAy20Dm3Txorf-e4Veo_PeoaaRElmj5zKH9Tr2isBpBKXXqhfW4qEcTAxtlzcKR1ZmaNQlHyHHS_brnxwLDYIYARC9s-H5p-3IGgX4wl84PUci03Yw2pvcepIN38ZycNuVAlZsB7wyvGr1sX3FVGCi45U5RoiKKG-1jz09n8AuuZtc9qfu30G94iem_D_71OD5Ns_FaMnuibO42bkc0fu9D2zl9D5kd6dEGHxMydJbPsBiU8Ph1a6h8OhrDzHWjVLrd_Ad35dlV_XHqdghNH_ZkyMWY4Iw9K16-ycoWvBfl9qCtgvaQMTMUfwUW3Z0yBlzvKA
#           dashboardUrl: http://127.0.0.1:64713 # url copied from running the command: minikube service kubernetes-dashboard -n kubernetes-dashboard
#           dashboardApp: standard
#           caData: ${K8S_CONFIG_CA_DATA}
          caFile: '/Users/mmochan/.kube/config' # local path to CA file
          customResources:
            - group: 'argoproj.io'
              apiVersion: 'v1alpha1'
              plural: 'rollouts'
#         - url: http://127.0.0.2:9999
#           name: aws-cluster-1
#           authProvider: 'aws'
#     - type: 'kind'
#       projectId: 'gke-clusters'
#       region: 'europe-west1'
#       skipTLSVerify: true
#       skipMetricsLookup: true
#       exposeDashboard: true
